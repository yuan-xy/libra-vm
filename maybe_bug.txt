block_prologue.mvir outdated.
block_prologue.mv should be removed.


reconfiguration_via_network_address_rotation.mvir里的“check: events: []”应该有bug。实际情况是"events:"和"[]"分别匹配的。

此外，输出“events: [], gas_used: 2242”很奇怪，为什么有gas_used被用掉了，但是没有events发生，谁出了gas费用？



move语言如何处理异常？

matcher的注释里 check 5有误。

e2e-test/account.rs
create_user_txn
TransactionPayload.Program is deprecated.


反汇编native的函数出错：
 p3 disassembler/main.py -b compiler/ir_stdlib/modules/address_util.mv
 RUST_BACKTRACE=1 cargo run -p disassembler -- -b language/compiler/src/ir_stdlib/modules/hash.mv


函数签名顺序不一致
pub struct SystemExecutionContext<'txn>(TransactionExecutionContext<'txn>);

impl<'txn> SystemExecutionContext<'txn> {
    pub fn new(data_cache: &'txn dyn RemoteCache, gas_left: GasUnits<GasCarrier>) -> Self {
        SystemExecutionContext(TransactionExecutionContext::new(gas_left, data_cache))
    }

impl<'txn> TransactionExecutionContext<'txn> {
    pub fn new(gas_left: GasUnits<GasCarrier>, data_cache: &'txn dyn RemoteCache) -> Self {



language/vm/vm-runtime/vm-runtime-types/src/values/values_impl.rs
683:        // TODO: this is very similar to SharedContainer::borrow_elem. Find a way to


vector, native_swap,
        #TTODO: why not support Uint8/Uint128 bellow


Global重复定义：
enum ContainerRef {
    Local(Rc<RefCell<Container>>),
    Global {
        status: Rc<RefCell<GlobalDataStatus>>,
        container: Rc<RefCell<Container>>,
    },
}

pub struct GlobalValue {
    status: Rc<RefCell<GlobalDataStatus>>,
    container: Rc<RefCell<Container>>,
}



acquires_global_resources被声明为数组：
    language/vm/src/file_format.rs
    350:    pub acquires_global_resources: Vec<StructDefinitionIndex>,
但是在view中被作为集合返回：
    language/vm/src/views.rs
    172:            .acquires_global_resources



408行的函数从未执行到
language/vm/src/check_bounds.rs
337:impl BoundsCheck<(&[StructHandle], usize)> for SignatureToken {
393:impl BoundsCheck<(&[StructHandle], &[Kind])> for SignatureToken {
399:impl BoundsCheck<(&CompiledModuleMut, &FunctionSignature)> for SignatureToken {
408:impl BoundsCheck<(&CompiledModuleMut, &StructHandle)> for SignatureToken {